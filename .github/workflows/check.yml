on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  check:
    strategy:
      matrix:
        platform: [ubuntu-latest]
        java: [11]
        r-version: ['release']
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: false
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Set up R ${{ matrix.r-version }}
        uses: r-lib/actions/setup-r@v1
        with:
          r-version: ${{ matrix.r-version }}
          use-public-rspm: true
      - name: Install libraries
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: |
          sudo apt install -y libcurl4-openssl-dev
          git clone --depth=1 https://github.com/taku910/mecab.git
          cd mecab/mecab
          ./configure --enable-utf8-only
          make
          sudo make install
          mecab-config --libs-only-L | sudo tee /etc/ld.so.conf.d/mecab.conf
          sudo ldconfig
          cd ../mecab-ipadic
          ./configure --with-charset=utf8
          make
          sudo make install
          cd ../../
          export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
      - name: R CMD javareconf
        run: sudo R CMD javareconf
      - name: Install dependencies
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          install.packages(c("remotes", "rcmdcheck", "covr", "rJava"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}
      - name: Check
        run: |
          rcmdcheck::rcmdcheck(args = c("--no-vignettes", "--no-manual"), build_args = c("--no-build-vignettes", "--no-manual"), error_on = "error")
        shell: Rscript {0}
      - name: Codecov
        run: covr::codecov()
        shell: Rscript {0}
